This plugin automates the generation of clangd's amazing compile_commands.json compilation database using CMake as the primary generator. If it seems necessary, then this plugin will even automatically rescan and regenerate the compilation database if new directories are made, I dunno.

User Stories:
Jerry big balls just started using neovim as his new text editor, but as he is an unintelligent clod, he doesn't want to deal with clangd's stupid yet amazing (but mostly stupid) compilation database just to get intellisense for included files. So, Jerry Big balls types a simple command when entereing his project's root directory, and this plugin automatically generates compile commands just for him. Now, Jerry's big balls are no longer blue due to not being able to use neovim because of the lack of intellisense, and Jerry is happy.


Features:
- Scans for header include directories based on common naming conventions, with options for non-standard names in a per-workspace config file.
- Builds a compilation database automatically when executing a command.     - Automatically updates said database when new directories are added.
    - Supports blacklisting for certain directory glob patterns
    - Automatically recognizes a c/c++ style project directory and performs generation steps accordingly (probably toggleable)
    - Automatically updates gitignore files with the generated directories and files
- Automatically installs dependencies (Cmake and clang) if needed

